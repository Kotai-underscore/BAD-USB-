DELAY 2000
GUI r
DELAY 1000
ALTSTRING powershell
ENTER
DELAY 1000
REM Create PowerShell script to gather system information
DELAY 500
ALTSTRING $system_info = @{
ENTER
DELAY 500
ALTSTRING 'OS' = $(Get-CimInstance Win32_OperatingSystem).Caption;
ENTER
DELAY 500
ALTSTRING 'Version' = $(Get-CimInstance Win32_OperatingSystem).Version;
ENTER
DELAY 500
ALTSTRING 'Architecture' = $(Get-CimInstance Win32_OperatingSystem).OSArchitecture;
ENTER
DELAY 500
ALTSTRING 'ComputerName' = $(Get-CimInstance Win32_OperatingSystem).CSName;
ENTER
DELAY 500
ALTSTRING 'LastBootTime' = $(Get-CimInstance Win32_OperatingSystem).LastBootUpTime;
ENTER
DELAY 500
ALTSTRING 'InstalledUpdates' = $(Get-HotFix | Sort-Object -Property InstalledOn -Descending | Select-Object -First 5).Description;
ENTER
DELAY 500
ALTSTRING 'NetworkInfo' = $(Get-CimInstance Win32_NetworkAdapterConfiguration | Where-Object {$_.IPEnabled -eq $true}).IPAddress;
ENTER
DELAY 500
ALTSTRING 'FirewallStatus' = $(Get-NetFirewallProfile | Where-Object { $_.Enabled -eq $true }).Name;
ENTER
DELAY 500
ALTSTRING 'UserAccounts' = $(Get-LocalUser | Where-Object { $_.Enabled -eq $true }).Name;
ENTER
DELAY 500
ALTSTRING 'RunningProcesses' = $(Get-Process | Sort-Object -Property CPU -Descending | Select-Object -First 5).Name;
ENTER
DELAY 500
ALTSTRING }
ENTER

REM Requesting GPT to format response in HTML
DELAY 500
ALTSTRING $prompt_text = "Given the detailed system information: OS: $($system_info.OS), Version: $($system_info.Version), Architecture: $($system_info.Architecture), Computer Name: COMPUTER_NAME_PLACEHOLDER, Last Boot Time: $($system_info.LastBootTime), Installed Updates: $($system_info.InstalledUpdates), Network Info: NETWORK_INFO_PLACEHOLDER, Firewall Status: $($system_info.FirewallStatus), User Accounts: USER_ACCOUNTS_PLACEHOLDER, Running Processes: $($system_info.RunningProcesses), provide a pentesting report identifying potential vulnerabilities in English, formatted in HTML with headers and bullet points for recommendations."
ENTER
DELAY 500
ALTSTRING $messages = @(
ENTER
DELAY 1000
ALTSTRING @{ 'role' = 'system'; 'content' = 'You are analyzing detailed system information for potential vulnerabilities.' },
ENTER
DELAY 1000
ALTSTRING @{ 'role' = 'user'; 'content' = $prompt_text }
ENTER
DELAY 1000
ALTSTRING )
ENTER
DELAY 500
ALTSTRING $headers = @{ 'Authorization' = 'Bearer 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'; 'Content-Type' = 'application/json' }
ENTER
DELAY 500
ALTSTRING $response = Invoke-RestMethod -Uri 'https://api.openai.com/v1/chat/completions' -Method POST -Headers $headers -Body (@{ model = 'gpt-3.5-turbo'; messages = $messages } | ConvertTo-Json)
ENTER
DELAY 500
ALTSTRING $htmlContent = @"
ENTER
DELAY 500
ALTSTRING <html>
ENTER
DELAY 500
ALTSTRING <head>
ENTER
DELAY 500
ALTSTRING <title>Pentesting Report BadUSB-GPT</title>
ENTER
DELAY 500
ALTSTRING <style>
ENTER
DELAY 500
ALTSTRING body {font-family: Arial, sans-serif; margin: 40px;}
ENTER
DELAY 500
ALTSTRING h2 {color: #333; border-bottom: 2px solid #eee; padding-bottom: 10px;}
ENTER
DELAY 500
ALTSTRING h3 {color: #555; margin-top: 20px;}
ENTER
DELAY 500
ALTSTRING p, ul {margin-bottom: 20px;}
ENTER
DELAY 500
ALTSTRING </style>
ENTER
DELAY 500
ALTSTRING </head>
ENTER
DELAY 500
ALTSTRING <body>
ENTER
DELAY 500
ALTSTRING <h2>Pentesting Report</h2>
ENTER
DELAY 500
ALTSTRING $($response.choices[0].message.content)
ENTER
DELAY 500
ALTSTRING </body>
ENTER
DELAY 500
ALTSTRING </html>
ENTER
DELAY 500
ALTSTRING "@
ENTER
DELAY 500
ALTSTRING Set-Content -Path $env:USERPROFILE\Desktop\Pentesting_Report.html -Value $htmlContent
ENTER
REM Replacing placeholders with actual values in the local report
DELAY 500
ALTSTRING (Get-Content $env:USERPROFILE\Desktop\Pentesting_Report.html).Replace('COMPUTER_NAME_PLACEHOLDER', $system_info.ComputerName).Replace('NETWORK_INFO_PLACEHOLDER', ($system_info.NetworkInfo -join ', ')).Replace('USER_ACCOUNTS_PLACEHOLDER', ($system_info.UserAccounts -join ', ')) | Set-Content $env:USERPROFILE\Desktop\Pentesting_Report.html
ENTER
